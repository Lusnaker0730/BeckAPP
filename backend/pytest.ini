[pytest]
# Pytest configuration for FHIR Analytics Platform Backend

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Coverage options
    --cov=app
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    # Fail if coverage is below threshold
    --cov-fail-under=50
    # Strict markers
    --strict-markers
    # Warnings
    -W error::DeprecationWarning
    -W error::PendingDeprecationWarning
    
# Asyncio configuration
asyncio_mode = auto

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may require database)
    slow: Slow running tests
    security: Security-related tests
    api: API endpoint tests
    auth: Authentication/authorization tests
    
# Coverage configuration
[coverage:run]
source = app
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code
    def __repr__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @abstractmethod
    @abc.abstractmethod

